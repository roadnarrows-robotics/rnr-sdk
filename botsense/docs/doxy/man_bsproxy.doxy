////////////////////////////////////////////////////////////////////////////////
//
// Package:   BotSense
//
// File:      man_bsproxy.doxy
//
// $LastChangedDate: 2012-02-14 12:39:13 -0700 (Tue, 14 Feb 2012) $
// $Rev: 1801 $
//
// Description:
//  This file contains the doxygen directives to generate the standard
//  man pages for the bsProxy server.
//
////////////////////////////////////////////////////////////////////////////////

/*! \file */

/*!
 * \ingroup bsserver
 * \defgroup man_bsproxy bsProxy Man Page

\par Name:
bsProxy - \h_botsense IP Proxy Server.

\par Synopsis:
<tt>
bsProxy [OPTIONS]
\n
bsProxy --version\n
bsProxy --help
</tt>

\par Description:
The \h_botsense Proxy Server <b>bsProxy</b> provides an IP interace to any
proxied (pseudo) device. The <b>bsProxy</b> is multi-threaded by device to
optimize client responsiveness. For each (pseudo) device, there must exist a
dynamically linked library that <b>bsProxy</b> will load to service the
device-specific request, plus a client side library or enabled application to
initiate the request and receive the responses.
The two ends typically, but are not required to, communicate through a
set of RoadNarrows NetMsgs defined network messages.\n\n
The Message Exchange Patterns (MEP) supported by <b>bsProxy</b> are:
\li client request - server response
\li server output streaming (e.g. video).

\par Options:
Mandatory arguments to long options are also mandatory for short options.
\htmlonly
<table class="rnr-opts">
<tr><td class="rnr-opts-grp">Server</td></tr>

<tr><td class="rnr-opts-opt">
  -i, --interface=[<em>addr</em>][:<em>port</em>]
</td></tr>
<tr><td>
Server passive socket interface. The server will 
listen on this interface to accept new 
incoming connection requests.
This options can be specified multiple times to define multiple listen
interfaces. For each interface instance &gt; 1 specified, <b>bsProxy</b> will
fork-exec a copy of itself, servicing that interface.
<br>
DEFAULT: <tt>:9195</tt>
</td></tr>

<tr><td class="rnr-opts-opt">
  -L, --libpath=<em>dir</em>
</td></tr>
<tr><td>
Add library directory path to search for dynamic linked library plugins.
This option can be specified multiple times to to build a list of search
paths.
</td></tr>


<tr><td class="rnr-opts-grp">Logging</td></tr>
<tr><td class="rnr-opts-opt">
  -l <em>level</em>, --log=<em>level</em>
</td></tr>
<tr><td>
  Set logging threshold level. All logging events 
  with priority &le; <em>level</em> will be logged. All 
  others will be ignored. Error events are 
  always logged. The <em>level</em> is one of:<br>
  <table class="rnr-opts" style="text-align:left">
  <tr>
    <td>'off' or 0</td>
   <td>Disable all logging.</td>
  </tr>
  <tr>
    <td>'error' or 1</td>
    <td>Enable error logging.</td>
  </tr>
  <tr>
    <td>'diag1' or 2</td>
    <td>Enable diagnostics 1 logging.</td>
  </tr>
  <tr>
    <td>'diag2' or 3</td>
    <td>Enable diagnostics 2 logging.</td>
  </tr>
  <tr>
    <td>'diag3' or 4</td>
    <td>Enable diagnostics 3 logging.<br>
    The libSkewlZone library logs at this level</td>
  </tr>
  <tr>
    <td>'diag4' or 5</td>
    <td>Enable diagnostics 4 logging.</td>
  </tr>
  <tr>
    <td>'diag5' or 6</td>
    <td>Enable diagnostics 5 logging.</td>
  </tr>
  <tr>
    <td>&gt;6</td>
    <td>Enable user-defined logging.</td>
  </tr>
  </table>
   DEFAULT: off
</td></tr>
<tr><td class="rnr-opts-opt">
  --logfile=<em>file</em>
</td></tr>
<tr><td>
  Set log output file to <em>file</em>.
  Special <em>file</em> names are:
  <table class="rnr-opts" style="text-align:left">
  <tr>
    <td>'stderr'</td>
    <td>log to standard error.</td>
  </tr>
  <tr>
    <td>'stdout'</td>
    <td>log to standard output.</td>
  </tr>
  </table>
  DEFAULT: stderr
</td></tr>

<tr><td class="rnr-opts-grp">Information</td></tr>
<tr><td class="rnr-opts-opt">
  --help
</td></tr>
<tr><td>
  Display command help and exit.
</td></tr>
<tr><td class="rnr-opts-opt">
  --version
</td></tr>
<tr><td>
  Output version information and exit.
</td></tr>
</table>
\endhtmlonly

\par Examples:
\htmlonly
<pre class="fragment"><div class="fragment"><span
class="comment"># Example 1
# Start bsProxy in the foreground using defaults and listening to all enabled
# IP interfaces.
$
$  bsProxy --log=diag1
BSPROXY: Diag1: bsProxy.c[888] BotSense IP Proxy Server bsProxy_9195 started
BSPROXY: Diag1: bsProxy.c[504] bsProxy_9195: Listening on interface 9195
BSPROXY: Diag1: bsProxyThread.c[518] Service Thread "#SERVER" created.
$
</div></pre>
\endhtmlonly
\n
\htmlonly
<pre class="fragment"><div class="fragment"><span
class="comment"># Example 2
# Start bsProxy in background listening on a specific interface, with a 
# list of user project library search directories, and with diagnostic
# logging streamed to the given file.
$
$  bsProxy --interface=192.168.1.32:49900 -L/workspace/bob/lib \
              -L/workspace/alice/lib --logfile=/workspace/log/log1.txt &
$
</div></pre>
\endhtmlonly

 * \{
 */

/*! \} */
