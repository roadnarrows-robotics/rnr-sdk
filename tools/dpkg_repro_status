#!/bin/bash
################################################################################
#
# Package:  RN Tools
#
# File:     dpkg_repro_status
#
# Version:
#   $LastChangedDate$
#   $Rev$
#
# Description:
#   Show all known packages installed in repro.
#
# Author: Robin Knight    (robin.knight@roadnarrows.com)
#
# Copyright (C) 2015-2016.  RoadNarrows LLC.
#
# All Rights Reserved
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that
# (1) The above copyright notice and the following two paragraphs
# appear in all copies of the source code and (2) redistributions
# including binaries reproduces these notices in the supporting
# documentation.   Substantial modifications to this software may be
# copyrighted by their authors and need not follow the licensing terms
# described here, provided that the new terms are clearly indicated in
# all files where they apply.
#
# IN NO EVENT SHALL THE AUTHOR, ROADNARROWS LLC, OR ANY MEMBERS/EMPLOYEES
# OF ROADNARROW LLC OR DISTRIBUTORS OF THIS SOFTWARE BE LIABLE TO ANY
# PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
# DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
# EVEN IF THE AUTHORS OR ANY OF THE ABOVE PARTIES HAVE BEEN ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# THE AUTHOR AND ROADNARROWS LLC SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN
# "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
#
################################################################################

_Cmd="dpkg_repro_status"

# Know packages san debian type
pkg_list='rnr-librnr rnr-libserial rnr-i2c rnr-gpio rnr-peripherals rnr-netmsgs rnr-botsense rnr-appkit rnr-odroid rnr-dynamixel rnr-hekateros rnr-laelaps rnr-pantilt'

# Debian supported RN packages
repolist="\
apt \
apt-linaro-omap \
apt-ubuntu-trusty-odroid \
apt-ubuntu-x86_64
"

# options
repo=
repo_codename=
verbose=true

#
# Synopsis:     _Usage
# Description:  Prints command usage
#
_Usage()
{
  printf "Usage: ${_Cmd} [OPTIONS]\n"
  printf "       ${_Cmd} --help\n"
}

#
# Synopsis:     _Desc
# Description:  Prints command description.
#
_Desc()
{
cat <<EOF

DESCRIPTION
  Print the status of the installed Debian packages found in the repository.

  Repos:
    ${repolist}

  Distribution Codenames:
    Repo specific.

  Supported Debian Types:
    ${debtypes}

OPTIONS
  -r, --repo=<repo>         Repository. REQUIRED.
  -c, --codename=<codename> Distribution codename.
                            Default: Repository specific.
  -v, --verbose             Verbose printing.
                            Default: true

  -h, --help                Display this help and exit.
EOF
}

#
# Synopsis:     _help
# Description:  Prints help and exits.
#
_help()
{
  _Usage
  _Desc
  exit 0
}

#
# Synopsis:     _try
# Description:  Prints try encouragement.
#
_try()
{
  printf "Try '${_Cmd} --help' for more information.\n" >&2
}

#
# Synopsis:     _error [<msg1> [<msg2>...]]
# Description:  Prints error message and exits
#
_error()
{
  if [ $# -gt 0 ]
  then
    printf "${_Cmd}: Error: $1"
    shift
    while [ $# -gt 0 ]
    do
      printf ": $1" 
      shift
    done
    printf "\n"
  fi
    _try
  exit 2
}

# 
# Get command-line options and arguments.
#
export POSIXLY_CORRECT

cmdopts=$(getopt --long=repo:,codename:,noexec,verbose,help --options=r:c:nvh --name=${_Cmd} -- "$@")

if [ $? != 0 ]
then
  _try
  exit 1
fi

eval set -- "${cmdopts}"

while true
do
  case "$1" in
    -r|--repo)      repo="$2"; shift 2;;
    -c|--codename)  repo_codename="$2"; shift 2;;
    -v|--verbose)   verbose=true; shift;;
    --help)         _help; shift;;
    --)             shift; break;;
    *)              echo "Internal error!"; exit 1;;
  esac
done

if [[ "${repo}" = "" ]]
then
  _error "Required <repo> not specified"
fi

if [[ "${repolist/${repo}}" = "${repolist}" ]]
then
  _error "${repo}" "Unsupported Debian local repository"
fi

shift $(($OPTIND - 1))

#if [[ $# -lt 1 ]]
#then
#fi

case "${repo}"
in
  apt|apt-ubuntu-x86_64)
    codenamelist="precise trusty"
    if [[ -z "${repo_codename}" ]]
    then
      repo_codename='trusty'
    fi
    repo_arch='amd64'
    ;;
  apt-linaro-omap)
    codenamelist="stable"
    if [[ -z "${repo_codename}" ]]
    then
      repo_codename='stable'
    fi
    repo_arch='armhf'
    ;;
  apt-ubuntu-trusty-odroid)
    codenamelist="trusty"
    if [[ -z "${repo_codename}" ]]
    then
      repo_codename='trusty'
    fi
    repo_arch='armhf'
    ;;
  apt-ubuntu-trusty-x86_64)
    codenamelist="trusty"
    repo_codename='trusty'
    repo_arch='amd64'
    ;;
  *)  _error "${repo}" "Unsupported repo."
      ;;
esac

if [[ "${codenamelist/${repo_codename}}" = "${codenamelist}" ]]
then
  _error "${repo_codename}" "Unsupported distribution codename"
fi

#
# Working variables
#
acct='buckleup@www.roadnarrows.com'
distro='/home/buckleup/roadnarrows.com/distro'
fqrepo=${distro}/${repo}
debtypes='dev src doc'
demark=\
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'

#
# Synopsis:     show_dep_pkgs
# Description:  Show installed Debian packages.
# Input:        pkg_list
#
show_deb_pkgs()
{
  for pkg_name in ${pkg_list}
  do
    pkg="${pkg_name}-dev"
    pkgtest=$(reprepro list ${repo_codename} ${pkg})
    if [[ "${pkgtest}" != "" ]]
    then
      printf "%-20s %-20s%.0s %s\n" ${pkg} ${pkgtest}
    else
      printf "%-20s %-20s %s\n" ${pkg} "NO_ENTRY" "NO_VER"
    fi
  done

  return 0
}


# -------------------------------------------------------------------------
# Execute
# -------------------------------------------------------------------------

# enter repo's top directory
cd ${fqrepo}

# print state
if [[ ${verbose} ]]
then
  printf "# %s\n" ${demark}
  printf "# Repo:                 ${repo}\n"
  printf "# Repo Root:            ${fqrepo}\n"
  printf "# Debian Architecture:  ${repo_arch}\n"
  printf "# Debian Codename:      ${repo_codename}\n"
  printf "# Date                  $(date)\n"
  printf "# %s\n" ${demark}
fi

# update
show_deb_pkgs

exit $?
