<?xml version="1.0" encoding="utf-8"?>

<!-- RoadNarrows Laelaps Tuning Configuration

  The tuning parameters effect the real-time performance of the Laelaps.
  The parameters are applied to the real-time embedded libraries
  liblaelaps and libDynamixel, and to the embedded laelaps_control ROS node.

  Any parameter not specified is set to the compiled default. Unknown
  parameters or invalid values are ignored.

  All parameters in this tuning template are equal to the compiled defaults.
  To override defaults, copy to /etc/laelaps/laelaps_tune.conf and modify.

  For complete documentation, see:
    https://github.com/roadnarrows-robotics/laelaps/wiki/Tuning 
    https://github.com/roadnarrows-robotics/laelaps/wiki/Trajectory
-->
<laelaps>

  <!-- Tuning Parameters -->
  <tuning>

    <!-- Global Parameters

          Global tuning parameters apply to the Laelaps behavior as a whole,
          as opposed to tuning parameters that apply to specific sub-systems,
          such as powertrains.

          Global parameters effect the overall performance to the robot.
    -->
    <global>
      <!-- Thread tuning.  -->
      <threads>
        <!-- IMU thread cycle rate (Hertz). -->
        <imu_hz>30</imu_hz>

        <!-- Kinodynamics thread cycle rate (Hertz). -->
        <kinematics_hz>30</kinematics_hz>

        <!-- Range sensing thread cycle rate (Hertz). -->
        <range_hz>8</range_hz>
      </threads>

      <!-- WatchDog timeout.
           Units: seconds
      -->
      <watchdog_timeout>6.0</watchdog_timeout>

      <!-- Velocity derate value.
           Units: percent
      -->
      <velocity_derate>100.0</velocity_derate>

      <!-- Multi-Point Trajectory Tuning
      -->
      <trajectory>
        <!-- Distance norm used to find distance to waypoint from current 
             position. One of: L1 L2 Linf
        -->
        <norm>Linf</norm>

        <!-- Waypoints within epsilon distances are considered reached.
             Units:   meters
        -->
        <epsilon>0.001</epsilon>
      </trajectory>

    </global>

    <!-- Battery SubSystem Properties.

        Only tweak the minimum voltage.
    -->
    <battery>
      <!-- Lithium Ion -->
      <type>lithium-ion polymer</type>
      <!-- lithium nickel manganese cobalt oxide -->
      <chemistry>NMC</chemistry>
      <!-- 10 Amp-hours -->
      <capacity>10.0</capacity>
      <!-- 3 cells in series -->
      <cells>3</cells>
      <!-- 4.2V/cell * 3 cells -->
      <max>12.6</max>
      <!-- 3.7V/cell * 3 cells -->
      <nominal>11.1</nominal>
      <!-- 3.0V/cell * 3 cells. Robot will alarm at or below this value. -->
      <min>9.0</min>
    </battery>

    <!-- Powertrain Pair SubSystem Tuning Parameters

        One motor controller controls two powertrains. Always force balanced
        powertrains pairs by disallowing left/right (sub)designations.
        A powertrain is defined as:
          motor controller - encoder - motor - gears - shaft - wheel - tire
    -->

    <!-- Front Powertrains -->
    <powertrains location="front">
      <!-- Motor velocity PID

            The velocity PID controls to the target velocity SetPoint.
      -->
      <velocity_pid>
        <!-- Proportional constant. -->
        <Kp>2500.0</Kp>
        <!-- Integral constant. -->
        <Ki>500.0</Ki>
        <!-- Derivative constant. -->
        <Kd>150.0</Kd>
      </velocity_pid>

      <!-- Tire properties

            Tires may be changed as conditions dictate. 
      -->
      <tires>
        <!-- meters -->
        <radius>0.060</radius>
        <!-- meters -->
        <width>0.065</width>
      </tires>
    </powertrains>

    <!-- Rear Powertrains -->
    <powertrains location="rear">
      <!-- Motor velocity PID

            The velocity PID controls to the target velocity SetPoint.
      -->
      <velocity_pid>
        <!-- Proportional constant. -->
        <Kp>2500.0</Kp>
        <!-- Integral constant. -->
        <Ki>500.0</Ki>
        <!-- Derivative constant. -->
        <Kd>150.0</Kd>
      </velocity_pid>

      <!-- Tire properties

            Tires may be changed as conditions dictate. 
      -->
      <tires>
        <!-- meters -->
        <radius>0.060</radius>
        <!-- meters -->
        <width>0.065</width>
      </tires>
    </powertrains>

    <!-- Range Sensors SubSystem Tuning Parameters

        Each VL6180 range sensor board has two relevant sensors:
          + Proximity Time-of-Flight Sensor (ToF)
          + Ambient Light Sensor (ALS)

        Sensors are identified by location, counter-clockwise from 0 degrees:
          0. front (standard)
          1. left_front (standard)
          2. left (optional)
          3. left_rear (optional)
          4. rear (optional)
          5. right_rear (optional)
          6. right (optional)
          7. right_front (standard)

        <tof_offset>
        The TOF part-to-part offset defines a bias in determining range. The
        VL6180 comes from the factory pre-calibrated and varies, well, from
        part to part. If the factory default is inadequate, use the 
        laelaps_tof utility to determine a new value and edit the appropriate
        <tof_offset> value. Eq. range (mm) = measured + offset
          Value:    -128 to 127 (mm) or factory (use factory default)
          Default:  factory

        <tof_crosstalk>
        The ToF cross-talk compensation parameter is used to cancel any noise
        injected from front plastic or glass reflectance and absorption. Laelaps
        acrylic introduces little noise. Use the laelaps_tof utility to adjust
        the value and edit the appropriate <tof_crosstalk> value.
          Value:    0 - 255 or factory (use factory default)
          Default:  factory

        <als_gain>
        The ALS analog gain provides boost in sensing ambient light intensity.
          Value:    1.0 1.25 1.67 2.5 5.0 10.0 20.0 40.0
          Default:  1.0

        <als_int_period>
        The ALS integration period (msec) defines the duration to sense ambient
        light intensity.
          Value:    1 - 512
          Default:  100
    -->
    <range_sensor type="vl6180" location="front">
      <tof_offset>factory</tof_offset>
      <tof_crosstalk>factory</tof_crosstalk>
      <als_gain>1.0</als_gain>
      <als_int_period>100</als_int_period>
    </range_sensor>

    <range_sensor type="vl6180" location="left_front">
      <tof_offset>factory</tof_offset>
      <tof_crosstalk>factory</tof_crosstalk>
      <als_gain>1.0</als_gain>
      <als_int_period>100</als_int_period>
    </range_sensor>

    <range_sensor type="vl6180" location="right_front">
      <tof_offset>factory</tof_offset>
      <tof_crosstalk>factory</tof_crosstalk>
      <als_gain>1.0</als_gain>
      <als_int_period>100</als_int_period>
    </range_sensor>

  </tuning>

</laelaps>
