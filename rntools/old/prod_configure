#!/bin/bash
################################################################################
#
# Package:  RN Tools
#
# File:     prod_configure
#
# Version:
#   $LastChangedDate$
#   $Rev$
#
# Description:
#   Configure this system for the given RoadNarrows product.
#
# Author: Robin Knight    (robin.knight@roadnarrows.com)
#
# Copyright (C) 2016.  RoadNarrows LLC.
#
# All Rights Reserved
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that
# (1) The above copyright notice and the following two paragraphs
# appear in all copies of the source code and (2) redistributions
# including binaries reproduces these notices in the supporting
# documentation.   Substantial modifications to this software may be
# copyrighted by their authors and need not follow the licensing terms
# described here, provided that the new terms are clearly indicated in
# all files where they apply.
#
# IN NO EVENT SHALL THE AUTHOR, ROADNARROWS LLC, OR ANY MEMBERS/EMPLOYEES
# OF ROADNARROW LLC OR DISTRIBUTORS OF THIS SOFTWARE BE LIABLE TO ANY
# PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
# DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
# EVEN IF THE AUTHORS OR ANY OF THE ABOVE PARTIES HAVE BEEN ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# THE AUTHOR AND ROADNARROWS LLC SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN
# "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
#
################################################################################

_Cmd="prod_configure"

# Known products
prodlist='aether hekateros laelaps pan_tilt'

# options
product=
verbose=true

#
# Synopsis:     _Usage
# Description:  Prints command usage
#
_Usage()
{
  printf "Usage: ${_Cmd} [OPTIONS]\n"
  printf "       ${_Cmd} --help\n"
}

#
# Synopsis:     _Desc
# Description:  Prints command description.
#
_Desc()
{
cat <<EOF

DESCRIPTION
  Configure this system for the given product.

  Products:
    ${prodlist}

OPTIONS
  -p, --product=<product>     Repository. REQUIRED.
  -v, --verbose               Verbose printing. Default: true

  -h, --help                Display this help and exit.
EOF
}

#
# Synopsis:     _help
# Description:  Prints help and exits.
#
_help()
{
  _Usage
  _Desc
  exit 0
}

#
# Synopsis:     _try
# Description:  Prints try encouragement.
#
_try()
{
  printf "Try '${_Cmd} --help' for more information.\n" >&2
}

#
# Synopsis:     _error [<msg1> [<msg2>...]]
# Description:  Prints error message and exits
#
_error()
{
  if [ $# -gt 0 ]
  then
    printf "${_Cmd}: Error: $1"
    shift
    while [ $# -gt 0 ]
    do
      printf ": $1" 
      shift
    done
    printf "\n"
  fi
    _try
  exit 2
}

# 
# Get command-line options and arguments.
#
export POSIXLY_CORRECT

cmdopts=$(getopt --long=product:,verbose,help --options=p:nvh --name=${_Cmd} -- "$@")

if [ $? != 0 ]
then
  _try
  exit 1
fi

eval set -- "${cmdopts}"

while true
do
  case "$1" in
    -p|--product)   product="$2"; shift 2;;
    -v|--verbose)   verbose=true; shift;;
    --help)         _help; shift;;
    --)             shift; break;;
    *)              echo "Internal error!"; exit 1;;
  esac
done

if [[ "${product}" = "" ]]
then
  _error "Required <product> not specified"
fi

if [[ "${prodlist/${product}}" = "${prodlist}" ]]
then
  _error "${product}" "Unsupported RoadNarrows product."
fi

shift $(($OPTIND - 1))

#if [[ $# -lt 1 ]]
#then
#fi

case "${product}"
in
  aether)
    prodpkg=
    ;;
  hekateros)
    prodpkg=/prj/pkg/Hekateros
    ;;
  laelaps)
    prodpkg=/prj/pkg/Laelaps
    ;;
  pan_tilt)
    prodpkg=/prj/pkg/PanTilt
    ;;
  *)  _error "${product}" "Unsupported product"
      ;;
esac

arch=$(uname -p)

case "${arch}"
in
  x86_64|i386)
    tgt="host"
    ;;
  arm*)
    if [[ "${product}" = "aether" ]]
    then
      tgt="host"
    else
      tgt="embedded"
    fi
    ;;
  *)  _error "${arch}" "Unsupported architecture"
      ;;
esac

#
# Working variables
#
demark=\
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'

# -------------------------------------------------------------------------
# Execute
# -------------------------------------------------------------------------

# print state
if [[ ${verbose} ]]
then
  printf "# %s\n" ${demark}
  printf "# Product:          ${product}\n"
  printf "# Product Package:  ${prodpkg}\n"
  printf "# Architecture:     ${arch}\n"
  printf "# Target:           ${tgt}\n"
  printf "# Date              $(date)\n"
  printf "# %s\n" ${demark}
fi

# Aether
if [[ "${product}" = "aether" ]]
then
  printf "Future\n"

# Hekateros
elif [[ "${product}" = "hekateros" ]]
then
  printf "Future\n"

# Laelaps
elif [[ "${product}" = "laelaps" ]]
then
  # config
  cd ${prodpkg}
  cd share/etc/laelaps
  # sudo cp ...

  # init
  cd ${prodpkg}
  cd share/etc/init.d
  printf "Copying init.d files\n"
  sudo cp laelaps_* /etc/init.d
  cd /etc/init.d
  printf "Updating init.d scripts\n"
  sudu update-rc.d laelaps_init defaults 89
  sudo update-rc.d laelaps_bsproxy defaults 90
  sudo update-rc.d laelaps_roscore defaults 91
  sudo update-rc.d laelaps_control defaults 92
  sudo update-rc.d laelaps_xbox defaults 93
  sudo update-rc.d laelaps_teleop defaults 94

  # profile
  cd ${prodpkg}
  cd share/etc/profile.d
  # sudo ...

  # wallpaper
  cd ${prodpkg}
  cd docs/images
  printf "Copying wallpaper\n"
  sudo cp laeodroidwallpaper.jpg /home/odroid/Pictures/WallPaper/.

  # Desktop

# Pan-Tilt
elif [[ "${product}" = "pan_tilt" ]]
then
  printf "Future\n"
fi

exit $?
